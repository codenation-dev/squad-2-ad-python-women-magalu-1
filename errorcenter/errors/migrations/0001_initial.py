# Generated by Django 2.2.6 on 2019-10-15 22:02

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active.Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='Error',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=254, verbose_name='Título')),
                ('description', models.TextField(max_length=500, verbose_name='Descrição')),
                ('level', models.CharField(choices=[('critical', 'Critical'), ('debug', 'Debug'), ('error', 'Error'), ('warning', 'Warning'), ('information', 'Info')], max_length=20, verbose_name='Tipo')),
                ('environment', models.CharField(choices=[('development', 'Dev'), ('homologation', 'Homologação'), ('production', 'Produção')], max_length=20, verbose_name='Ambiente')),
                ('address', models.GenericIPAddressField(validators=[django.core.validators.validate_ipv4_address], verbose_name='Endereço IP')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('events', models.IntegerField(verbose_name='Eventos')),
                ('filed', models.BooleanField(default=False, verbose_name='Arquivado')),
                ('excluded', models.BooleanField(default=False, verbose_name='Excluído')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='errors', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
